# 腾讯云函数部署

name: Tencent sls Deploy

# 触发时机
on:
  # 在 push 事件时触发工作流，但仅针对主分支
  push:
    branches: [ main ]

  # 允许您从“操作”选项卡手动运行此工作流程
  workflow_dispatch:

# 工作流运行由一个或多个可以按顺序或并行运行的作业组成
jobs:
  ################ 构建任务 #######################
  # 参考 https://github.com/swift-server/guides/blob/main/docs/packaging.md#docker
  setup-build-deploy:
    # 作业名称
    name: Setup, Build and Deploy
    # 作业: 运行时
    runs-on: ubuntu-latest
    environment: production

    # 步骤表示将作为作业的一部分执行的一系列任务
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      # Build
      - name: 构建镜像
        run: |
          docker build -t scf_app . -f ./SCF/CustomRuntime/Dockerfile.build

      # Copy Resource
      - name: Copy Resource
        run: |
          docker create --name extract scf_app
          docker cp extract:/app app
          docker rm -f extract
    
      ################## 部署任务 ########################
      - name: 自定义运行时
        run: |
          touch ./app/scf_bootstrap && chmod +x ./app/scf_bootstrap
          cat > ./app/scf_bootstrap<<EOF
          #!/usr/bin/env bash
          # export LD_LIBRARY_PATH=/opt/swift/usr/lib:${LD_LIBRARY_PATH}
          ./Run serve --env production --hostname 0.0.0.0 --port 9000
          EOF
          
      - name: 安装 Serverless
        run: |
          npm install -g serverless
          npm install -g @slsplus/cli

      - name: 部署
        env:
          SERVERLESS_PLATFORM_VENDOR: tencent
          TENCENT_SECRET_ID: ${{ secrets.SECRETID }}
          TENCENT_SECRET_KEY: ${{ secrets.SECRETKEY }}
          TENCENT_APP_ID: ${{ secrets.APPID }}
          # 应用名称
          APP_NAME: ${{ secrets.APPNAME }}
          # ap-guangzhou
          REGION: ${{ secrets.REGION }}
          # Go1
          RUNTIME: ${{ secrets.RUNTIME }}
          INSTANCE_NAME: ${{ secrets.INSTANCENAME }}
        run: |
          slsplus parse --output --auto-create --sls-options='{"component":"scf","name":"${env:INSTANCE_NAME}","org":"${env:TENCENT_APP_ID}","app":"${env:APP_NAME}","inputs":{"name":"${env:APP_NAME}","region":"${env:REGION}","runtime":"${env:RUNTIME}","type":"web","src":{"src":"./app","exclude":[".env"]},"memorySize":64,"events":[{"apigw":{"parameters":{"serviceName":"vapor_hello_serverless","description":"vapor hello action","endpoints":[{"function":{"isIntegratedResponse":true},"method":"ANY","path":"/"}],"protocols":["http","https"],"environment":"release"}}}]}}' && cat serverless.yml
          sls deploy --force --debug

# END
